class Solution {
public:
	int findMin(vector<int> &num) {
		if(num.size()==0)
			return -1;
		else if (num[num.size()-1]>num[0])
		{
			return num[0];
		}else{
			return findrange(num,0,num.size()-1);
		}
	}
	int findrange(vector<int> &num,int left,int right){
		if (left==right){
			return num[left];
		}else if (right-left==1){
			return num[left]<num[right]?num[left]:num[right];
		}else if(right-left>1){
			int mid=(left+right)/2;
			if (num[mid]>num[left])
			{
				findrange(num,mid,right);
			}else if(num[mid]<num[left]){
				findrange(num,left,mid);
			}else{
				if(num[mid]<num[right])
					findrange(num,left,mid);
				else if(num[mid]>num[right])
					findrange(num,mid,right);
				else{
					return findrange(num,left,mid)<findrange(num,mid,right)?findrange(num,left,mid):findrange(num,mid,right);
				}
			}
		}
	}
};
